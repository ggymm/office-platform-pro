// Generated by github.com/davyxu/protoplus
// DO NOT EDIT!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: message.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
// 设备类型
type DeviceType int32

const (
	DeviceType_DEVICE_TYPE_UNKNOW DeviceType = 0
	DeviceType_PC                 DeviceType = 1 // PC
	DeviceType_ANDROID            DeviceType = 2 // 安卓
	DeviceType_IOS                DeviceType = 3 // IOS
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0: "DEVICE_TYPE_UNKNOW",
		1: "PC",
		2: "ANDROID",
		3: "IOS",
	}
	DeviceType_value = map[string]int32{
		"DEVICE_TYPE_UNKNOW": 0,
		"PC":                 1,
		"ANDROID":            2,
		"IOS":                3,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

//*
// 命令类型
type CommandType int32

const (
	CommandType_COMMAND_UNKNOW    CommandType = 0
	CommandType_HEARTBEAT         CommandType = 1  // 心跳请求
	CommandType_SERVER_ERROR_RESP CommandType = 2  // 会话出现错误
	CommandType_SEQ_REQ           CommandType = 10 // 获取消息ID
	CommandType_SEQ_RESP          CommandType = 11 // 响应消息ID
	CommandType_LOGIN_REQ         CommandType = 20 // 登录请求
	CommandType_LOGIN_RESP        CommandType = 21 // 登录响应
	CommandType_ROBOT_REQ         CommandType = 30 // 自动机器人请求
	CommandType_ROBOT_RESP        CommandType = 31 // 自动机器人响应
	CommandType_JOIN_GROUP_REQ    CommandType = 40 // 加入群组请求
	CommandType_JOIN_GROUP_RESP   CommandType = 41 // 加入群组响应
	CommandType_JOIN_GROUP_NOTIFY CommandType = 42 // 加入群组通知
	CommandType_EXIT_GROUP_NOTIFY CommandType = 43 // 退出群组通知
	CommandType_MSG_REQ           CommandType = 50 // 聊天消息请求
	CommandType_MSG_ACK           CommandType = 51 // 聊天消息请求回执
	CommandType_MSG_NOTIFY        CommandType = 52 // 聊天消息通知
	CommandType_MSG_RESP          CommandType = 53 // 聊天消息响应（即接收到消息）
	CommandType_MSG_RESP_ACK      CommandType = 54 // 聊天消息响应回执
	CommandType_MSG_RESP_NOTIFY   CommandType = 55 // 聊天消息响应通知
	CommandType_CANCEL_MSG_REQ    CommandType = 60 // 撤回消息请求
	CommandType_CANCEL_MSG_RESP   CommandType = 61 // 撤回消息响应
	CommandType_GET_MESSAGE_REQ   CommandType = 70 // 获取消息请求
	CommandType_GET_MESSAGE_RESP  CommandType = 71 // 获取消息响应
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0:  "COMMAND_UNKNOW",
		1:  "HEARTBEAT",
		2:  "SERVER_ERROR_RESP",
		10: "SEQ_REQ",
		11: "SEQ_RESP",
		20: "LOGIN_REQ",
		21: "LOGIN_RESP",
		30: "ROBOT_REQ",
		31: "ROBOT_RESP",
		40: "JOIN_GROUP_REQ",
		41: "JOIN_GROUP_RESP",
		42: "JOIN_GROUP_NOTIFY",
		43: "EXIT_GROUP_NOTIFY",
		50: "MSG_REQ",
		51: "MSG_ACK",
		52: "MSG_NOTIFY",
		53: "MSG_RESP",
		54: "MSG_RESP_ACK",
		55: "MSG_RESP_NOTIFY",
		60: "CANCEL_MSG_REQ",
		61: "CANCEL_MSG_RESP",
		70: "GET_MESSAGE_REQ",
		71: "GET_MESSAGE_RESP",
	}
	CommandType_value = map[string]int32{
		"COMMAND_UNKNOW":    0,
		"HEARTBEAT":         1,
		"SERVER_ERROR_RESP": 2,
		"SEQ_REQ":           10,
		"SEQ_RESP":          11,
		"LOGIN_REQ":         20,
		"LOGIN_RESP":        21,
		"ROBOT_REQ":         30,
		"ROBOT_RESP":        31,
		"JOIN_GROUP_REQ":    40,
		"JOIN_GROUP_RESP":   41,
		"JOIN_GROUP_NOTIFY": 42,
		"EXIT_GROUP_NOTIFY": 43,
		"MSG_REQ":           50,
		"MSG_ACK":           51,
		"MSG_NOTIFY":        52,
		"MSG_RESP":          53,
		"MSG_RESP_ACK":      54,
		"MSG_RESP_NOTIFY":   55,
		"CANCEL_MSG_REQ":    60,
		"CANCEL_MSG_RESP":   61,
		"GET_MESSAGE_REQ":   70,
		"GET_MESSAGE_RESP":  71,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

//*
// 消息类型
type MsgType int32

const (
	MsgType_MSG_TYPE_UNKNOW MsgType = 0 // 未知
	MsgType_TEXT            MsgType = 1 // 文本
	MsgType_IMG             MsgType = 2 // 图片
	MsgType_VOICE           MsgType = 3 // 语音
	MsgType_VIDEO           MsgType = 4 // 视频
	MsgType_MUSIC           MsgType = 5 // 音乐
	MsgType_NEWS            MsgType = 6 // 图文
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "MSG_TYPE_UNKNOW",
		1: "TEXT",
		2: "IMG",
		3: "VOICE",
		4: "VIDEO",
		5: "MUSIC",
		6: "NEWS",
	}
	MsgType_value = map[string]int32{
		"MSG_TYPE_UNKNOW": 0,
		"TEXT":            1,
		"IMG":             2,
		"VOICE":           3,
		"VIDEO":           4,
		"MUSIC":           5,
		"NEWS":            6,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[2].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[2]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

//*
// 聊天类型
type ChatType int32

const (
	ChatType_CHAT_TYPE_UNKNOW ChatType = 0 // 未知
	ChatType_PUBLIC           ChatType = 1 // 公聊
	ChatType_PRIVATE          ChatType = 2 // 私聊
)

// Enum value maps for ChatType.
var (
	ChatType_name = map[int32]string{
		0: "CHAT_TYPE_UNKNOW",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	ChatType_value = map[string]int32{
		"CHAT_TYPE_UNKNOW": 0,
		"PUBLIC":           1,
		"PRIVATE":          2,
	}
)

func (x ChatType) Enum() *ChatType {
	p := new(ChatType)
	*p = x
	return p
}

func (x ChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[3].Descriptor()
}

func (ChatType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[3]
}

func (x ChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatType.Descriptor instead.
func (ChatType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

//*
// 消息体
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                                   // 消息ID
	Seq        int64       `protobuf:"varint,2,opt,name=Seq,proto3" json:"Seq,omitempty"`                                 // 消息序列号
	From       int64       `protobuf:"varint,3,opt,name=From,proto3" json:"From,omitempty"`                               // 消息发送人
	To         int64       `protobuf:"varint,4,opt,name=To,proto3" json:"To,omitempty"`                                   // 消息接收人
	CreateTime int64       `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`                   // 消息创建时间
	Cmd        CommandType `protobuf:"varint,6,opt,name=Cmd,proto3,enum=message.CommandType" json:"Cmd,omitempty"`        // 命令类型
	MsgType    MsgType     `protobuf:"varint,7,opt,name=MsgType,proto3,enum=message.MsgType" json:"MsgType,omitempty"`    // 消息类型
	ChatType   ChatType    `protobuf:"varint,8,opt,name=ChatType,proto3,enum=message.ChatType" json:"ChatType,omitempty"` // 聊天类型
	GroupId    string      `protobuf:"bytes,9,opt,name=GroupId,proto3" json:"GroupId,omitempty"`                          // 群组ID
	Content    string      `protobuf:"bytes,10,opt,name=Content,proto3" json:"Content,omitempty"`                         // 消息内容
	Extras     string      `protobuf:"bytes,11,opt,name=Extras,proto3" json:"Extras,omitempty"`                           // 额外字段（JSON类型）
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Message) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Message) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *Message) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Message) GetCmd() CommandType {
	if x != nil {
		return x.Cmd
	}
	return CommandType_COMMAND_UNKNOW
}

func (x *Message) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_MSG_TYPE_UNKNOW
}

func (x *Message) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_CHAT_TYPE_UNKNOW
}

func (x *Message) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetExtras() string {
	if x != nil {
		return x.Extras
	}
	return ""
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbe, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x53, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x43, 0x6d,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x43,
	0x6d, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d,
	0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x2a, 0x42, 0x0a, 0x0a, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x45, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12,
	0x06, 0x0a, 0x02, 0x50, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x44, 0x52, 0x4f,
	0x49, 0x44, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10, 0x03, 0x2a, 0xaa, 0x03,
	0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x51, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45, 0x51, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0x14, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10,
	0x15, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x1e,
	0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x1f,
	0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0x28, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x29, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f, 0x49,
	0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x2a,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x58, 0x49, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x2b, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x53, 0x47, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0x32, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x53, 0x47, 0x5f, 0x41, 0x43, 0x4b, 0x10,
	0x33, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x53, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10,
	0x34, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x35, 0x12,
	0x10, 0x0a, 0x0c, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x41, 0x43, 0x4b, 0x10,
	0x36, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x10, 0x37, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x3c, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x3d, 0x12,
	0x13, 0x0a, 0x0f, 0x47, 0x45, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0x46, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x47, 0x2a, 0x5c, 0x0a, 0x07, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45,
	0x58, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4d, 0x47, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x10, 0x05, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x45, 0x57, 0x53, 0x10, 0x06, 0x2a, 0x39, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54,
	0x45, 0x10, 0x02, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_message_proto_goTypes = []interface{}{
	(DeviceType)(0),  // 0: message.DeviceType
	(CommandType)(0), // 1: message.CommandType
	(MsgType)(0),     // 2: message.MsgType
	(ChatType)(0),    // 3: message.ChatType
	(*Message)(nil),  // 4: message.Message
}
var file_message_proto_depIdxs = []int32{
	1, // 0: message.Message.Cmd:type_name -> message.CommandType
	2, // 1: message.Message.MsgType:type_name -> message.MsgType
	3, // 2: message.Message.ChatType:type_name -> message.ChatType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
